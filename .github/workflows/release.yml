name: Release boxes

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Version of Vagrant box to release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gov:
    name: Get OS versions
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      os-versions: ${{ steps.get-os-versions.outputs.os-versions }}
    steps:
      - uses: actions/checkout@v3
      - id: get-os-versions
        run: |
          VERSIONS=$(jq -cR 'split(" ")' os_vers)
          OUTPUT="os-versions=$VERSIONS"
          echo "Setting '$OUTPUT'"
          echo "$OUTPUT" >> $GITHUB_OUTPUT
  run-packer-release:
    runs-on: macos-12
    timeout-minutes: 30
    needs: gov
    env:
      PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VAGRANT_CLOUD_TOKEN: ${{ secrets.VAGRANT_CLOUD_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJSON(needs.gov.outputs.os-versions) }}
    steps:
      - name: Prepare environment
        run: |
          brew install make
          INPUT=${{ inputs.version }}
          [ -n "$INPUT" ] && echo "PKR_VAR_version=$INPUT" >> $GITHUB_ENV \
            || echo "Workflow input not given"
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download Vagrant box file
        run: |
          BOX_FILE=box/virtualbox/${{ matrix.version }}.box
          BOX_URL=https://vagrantcloud.com/techneg/boxes/
          BOX_URL+=test-${{ matrix.version }}x64-nocm/versions/
          BOX_URL+=${{ inputs.version }}/providers/virtualbox.box
          mkdir -p "${BOX_FILE%/*}"
          case ${{ github.event_name }} in
            workflow_dispatch)
              wget --no-verbose -O "$BOX_FILE" "$BOX_URL"
              ;;
          esac
      - name: Packer release
        env:
          PKR_VAR_prefix: ~
        run: |
          cd upload && gmake main.cat.pkr.hcl
          case ${{ github.event_name }} in
            workflow_dispatch)
              packer build -timestamp-ui -force -only \*.${{ matrix.version }} .
              ;;
            *)
              packer inspect .
              packer validate -only \*.${{ matrix.version }} .
              ;;
          esac
